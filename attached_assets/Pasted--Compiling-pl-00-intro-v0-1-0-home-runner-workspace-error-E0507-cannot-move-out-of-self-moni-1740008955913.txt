   Compiling pl-00-intro v0.1.0 (/home/runner/workspace)
error[E0507]: cannot move out of `self.monitors` which is behind a shared reference
   --> src/ch2_setup/channel_exercises.rs:173:25
    |
173 |     for (_, monitor) in self.monitors.into_iter() {
    |                         ^^^^^^^^^^^^^ ----------- `self.monitors` moved due to this method call
    |                         |
    |                         move occurs because `self.monitors` has type `HashMap<lightning::chain::transaction::OutPoint, channel_exercises::ChannelMonitor>`, which does not implement the `Copy` trait
    |
note: `into_iter` takes ownership of the receiver `self`, which moves `self.monitors`
   --> /rustc/e71f9a9a98b0faf423844bf0ba7438f29dc27d58/library/core/src/iter/traits/collect.rs:346:18
help: you can `clone` the value and consume it, but this might not be your desired behavior
    |
173 |     for (_, monitor) in <HashMap<lightning::chain::transaction::OutPoint, channel_exercises::ChannelMonitor> as Clone>::clone(&self.monitors).into_iter() {
    |                         +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++             +
help: consider cloning the value if the performance cost is acceptable
    |
173 |     for (_, monitor) in self.monitors.clone().into_iter() {
    |                                      ++++++++

error[E0596]: cannot borrow `monitor` as mutable, as it is not declared as mutable
   --> src/ch2_setup/channel_exercises.rs:174:7
    |
174 |       monitor.block_connected(
    |       ^^^^^^^ cannot borrow as mutable
    |
help: consider changing this to be mutable
    |
173 |     for (_, mut monitor) in self.monitors.into_iter() {
    |             +++

error[E0382]: use of moved value: `txdata`
   --> src/ch2_setup/channel_exercises.rs:176:9
    |
169 |     txdata: TransactionData,
    |     ------ move occurs because `txdata` has type `Vec<bitcoin::Transaction>`, which does not implement the `Copy` trait
...
173 |     for (_, monitor) in self.monitors.into_iter() {
    |     --------------------------------------------- inside of this loop
...
176 |         txdata,
    |         ^^^^^^ value moved here, in previous iteration of loop
    |
note: consider changing this parameter type in method `block_connected` to borrow instead if owning the value isn't necessary
   --> src/ch2_setup/channel_exercises.rs:69:13
    |
66  |   pub fn block_connected(
    |          --------------- in this method
...
69  |     txdata: TransactionData,
    |             ^^^^^^^^^^^^^^^ this parameter takes ownership of the value
help: consider moving the expression out of the loop so it is only moved once
    |
173 ~     let mut value = monitor.block_connected(
174 +         header,
175 +         txdata,
176 +         height,
177 +         self.broadcaster);
178 ~     for (_, monitor) in self.monitors.into_iter() {
179 ~       value;
    |
help: consider cloning the value if the performance cost is acceptable
    |
176 |         txdata.clone(),
    |               ++++++++

error[E0507]: cannot move out of `self.broadcaster` which is behind a shared reference
   --> src/ch2_setup/channel_exercises.rs:178:9
    |
178 |         self.broadcaster);
    |         ^^^^^^^^^^^^^^^^ move occurs because `self.broadcaster` has type `BitcoindClient`, which does not implement the `Copy` trait
    |
help: consider cloning the value if the performance cost is acceptable
    |
178 |         self.broadcaster.clone());
    |                         ++++++++

Some errors have detailed explanations: E0382, E0507, E0596.
For more information about an error, try `rustc --explain E0382`.
error: could not compile `pl-00-intro` (lib test) due to 4 previous errors